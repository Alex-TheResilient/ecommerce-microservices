services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_pass
      POSTGRES_DB: ecommerce_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d ecommerce_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Auth Service
  auth-service:
    build: ./services/auth-service
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_pass@postgres:5432/ecommerce_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - NOTIFICATION_SERVICE_URL=http://notification-service:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
    restart: unless-stopped

  # Product Service
  product-service:
    build: ./services/product-service
    ports:
      - '3002:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_pass@postgres:5432/ecommerce_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./services/product-service:/app
      - /app/node_modules
    restart: unless-stopped

  # Order Service
  order-service:
    build: ./services/order-service
    ports:
      - '3003:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_pass@postgres:5432/ecommerce_db
      - AUTH_SERVICE_URL=http://auth-service:3000
      - PRODUCT_SERVICE_URL=http://product-service:3000
      - NOTIFICATION_SERVICE_URL=http://notification-service:3000
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
      product-service:
        condition: service_started
    volumes:
      - ./services/order-service:/app
      - /app/node_modules
    restart: unless-stopped

  # Notification Service
  notification-service:
    build: ./services/notification-service
    ports:
      - '3004:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      # Email config (puedes usar Gmail o mock para desarrollo)
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_SECURE=false
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-app-password
      # Service URLs para callbacks
      - AUTH_SERVICE_URL=http://auth-service:3000
      - PRODUCT_SERVICE_URL=http://product-service:3000
      - ORDER_SERVICE_URL=http://order-service:3000
      - FRONTEND_URL=http://localhost:3000
      # Rate limits
      - EMAIL_RATE_LIMIT_PER_HOUR=10
      - IN_APP_RATE_LIMIT_PER_HOUR=100
      - QUEUE_CONCURRENCY=5
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./services/notification-service:/app
      - /app/node_modules
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3000
      - PRODUCT_SERVICE_URL=http://product-service:3000
      - ORDER_SERVICE_URL=http://order-service:3000
      - NOTIFICATION_SERVICE_URL=http://notification-service:3000
    depends_on:
      - auth-service
      - product-service
      - order-service
      - notification-service
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data: